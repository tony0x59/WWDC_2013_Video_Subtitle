

1
00:00:00.506 --> 00:00:09.596 A:middle
[ Silence ]

2
00:00:10.096 --> 00:00:10.856 A:middle
&gt;&gt; Good morning.

3
00:00:11.356 --> 00:00:18.916 A:middle
[ Applause ]

4
00:00:19.416 --> 00:00:21.526 A:middle
Thanks. Welcome to Building
User Interfaces for iOS 7.

5
00:00:22.866 --> 00:00:24.436 A:middle
My name is Jason Beaver
and I'm going to be joined

6
00:00:24.436 --> 00:00:26.626 A:middle
on stage a little bit
later by Andy Matuschak.

7
00:00:27.306 --> 00:00:29.966 A:middle
And we both work on UIKit.

8
00:00:29.966 --> 00:00:31.366 A:middle
And we're going to spend
most of the morning,

9
00:00:31.366 --> 00:00:33.606 A:middle
talking about the changes
we've made in UIKit

10
00:00:33.606 --> 00:00:35.466 A:middle
to support the new
user interface.

11
00:00:36.486 --> 00:00:38.706 A:middle
But before we do, I want
to take a moment to talk

12
00:00:38.706 --> 00:00:40.896 A:middle
about the design themes that
were mentioned yesterday.

13
00:00:41.706 --> 00:00:44.786 A:middle
Because the change that we've
made in UIKit were really driven

14
00:00:44.786 --> 00:00:45.886 A:middle
by these design themes.

15
00:00:47.386 --> 00:00:48.636 A:middle
The first of these is clarity.

16
00:00:49.206 --> 00:00:52.456 A:middle
Applications in iOS 7 should
be clear and easy to use,

17
00:00:53.006 --> 00:00:56.526 A:middle
should strip away the irrelevant
and unimportant information

18
00:00:56.846 --> 00:00:58.916 A:middle
and focus on what's really
important to the user.

19
00:00:58.916 --> 00:01:00.446 A:middle
And the design

20
00:01:00.446 --> 00:01:04.626 A:middle
of the application should make
it clear how user uses it.

21
00:01:07.236 --> 00:01:09.246 A:middle
The second is deference.

22
00:01:10.156 --> 00:01:12.476 A:middle
The application shouldn't
get in the way

23
00:01:12.956 --> 00:01:14.866 A:middle
of connecting the
user to their content.

24
00:01:15.406 --> 00:01:18.796 A:middle
In the Weather application,
for example,

25
00:01:19.936 --> 00:01:22.266 A:middle
we've removed the boarders
and other extraneous bits

26
00:01:22.266 --> 00:01:26.046 A:middle
of the user interface and put
what the user cares about most

27
00:01:26.046 --> 00:01:27.676 A:middle
which is the current conditions.

28
00:01:28.876 --> 00:01:31.296 A:middle
Filling screens edge to
edge, in fact, it even runs

29
00:01:31.336 --> 00:01:32.566 A:middle
up under the status bar.

30
00:01:32.566 --> 00:01:36.546 A:middle
And of course, it goes
way beyond Weather.

31
00:01:36.546 --> 00:01:38.506 A:middle
We've done this throughout
the user interface.

32
00:01:39.566 --> 00:01:41.736 A:middle
The user's content is what's
really important to them

33
00:01:42.156 --> 00:01:43.146 A:middle
and it should fill the screen.

34
00:01:43.726 --> 00:01:48.736 A:middle
And the third is depth.

35
00:01:48.936 --> 00:01:51.586 A:middle
Applications on iOS
7 make extensive use

36
00:01:51.586 --> 00:01:55.466 A:middle
of blurring transparent layers
as well as new mechanisms

37
00:01:55.466 --> 00:01:57.336 A:middle
like dynamics and motion effects

38
00:01:57.866 --> 00:01:59.886 A:middle
to create rich three-dimensional
experiences

39
00:01:59.886 --> 00:02:00.996 A:middle
that are really engaging.

40
00:02:01.606 --> 00:02:07.196 A:middle
So let's move on and talk about
the changes we've made in UIKit

41
00:02:07.536 --> 00:02:09.316 A:middle
in support of these
design themes.

42
00:02:10.006 --> 00:02:12.846 A:middle
And one of the biggest
is typography.

43
00:02:14.956 --> 00:02:18.066 A:middle
Beautiful typography
is at the core of many

44
00:02:18.066 --> 00:02:20.746 A:middle
of the design changes
across iOS.

45
00:02:21.666 --> 00:02:25.666 A:middle
And our type designers and our
human interface designers worked

46
00:02:25.706 --> 00:02:29.366 A:middle
closely with engineering to
define an entirely new approach

47
00:02:29.846 --> 00:02:32.696 A:middle
to user interface typography
called Dynamic Type.

48
00:02:36.396 --> 00:02:38.106 A:middle
And nothing has been
tried like this

49
00:02:38.106 --> 00:02:39.586 A:middle
in an operating system
before and it's going

50
00:02:39.586 --> 00:02:41.696 A:middle
to change the way we
build application.

51
00:02:42.796 --> 00:02:46.426 A:middle
Dynamic Type let's us
specify fonts semantically.

52
00:02:46.426 --> 00:02:51.706 A:middle
We no longer specify fonts
by phase and type size.

53
00:02:51.916 --> 00:02:56.506 A:middle
Users have control over the size
of text in their applications

54
00:02:57.046 --> 00:03:02.676 A:middle
and we've made extensive
changes in the fonts

55
00:03:03.206 --> 00:03:04.786 A:middle
to make them beautiful
and easy to read

56
00:03:04.786 --> 00:03:06.396 A:middle
at a wide variety of sizes.

57
00:03:07.646 --> 00:03:10.986 A:middle
And finally, it contains
built-in support for those

58
00:03:10.986 --> 00:03:12.126 A:middle
who have vision impairments.

59
00:03:12.126 --> 00:03:14.956 A:middle
So let's talk about
these changes.

60
00:03:17.116 --> 00:03:21.276 A:middle
Typically, in operating systems
and in all prior versions

61
00:03:21.276 --> 00:03:24.516 A:middle
of iOS, fonts are
simply scaled up or down.

62
00:03:25.356 --> 00:03:28.206 A:middle
And this means that a
font that is easy to read

63
00:03:28.206 --> 00:03:32.146 A:middle
at large size become-- can
become very thin and difficult

64
00:03:32.146 --> 00:03:33.486 A:middle
to read it at small size.

65
00:03:33.996 --> 00:03:37.176 A:middle
And conversely, a font
that is comfortable to read

66
00:03:37.176 --> 00:03:40.626 A:middle
at a small size can be overly
heavy and uncomfortable

67
00:03:40.626 --> 00:03:41.786 A:middle
to read at large sizes.

68
00:03:43.476 --> 00:03:46.386 A:middle
But we make size-specific
adjustments

69
00:03:46.756 --> 00:03:49.136 A:middle
to the character weight,
the character spacing

70
00:03:49.136 --> 00:03:52.226 A:middle
and the line spacing to result
in fonts that are beautiful

71
00:03:52.226 --> 00:03:54.316 A:middle
and easy to read at
wide variety of sizes.

72
00:03:54.816 --> 00:03:59.106 A:middle
On top of this, we're
introducing text styles.

73
00:04:00.576 --> 00:04:03.256 A:middle
Instead of specifying
specific fonts and sizes,

74
00:04:04.076 --> 00:04:05.526 A:middle
you specify fonts semantically.

75
00:04:05.526 --> 00:04:08.466 A:middle
And these are set of fonts
that our designers have chosen

76
00:04:08.466 --> 00:04:09.586 A:middle
that work really well together.

77
00:04:10.726 --> 00:04:12.726 A:middle
And you can access
the corresponding font

78
00:04:12.726 --> 00:04:16.156 A:middle
for these styles using
a new method on UIFont

79
00:04:16.826 --> 00:04:19.236 A:middle
to get the preferred font
for a particular text style.

80
00:04:22.456 --> 00:04:25.176 A:middle
The users want control
over the size of text

81
00:04:25.176 --> 00:04:26.126 A:middle
in their applications.

82
00:04:26.476 --> 00:04:29.716 A:middle
Some users with great eyesight
want maximum information density

83
00:04:29.716 --> 00:04:30.366 A:middle
on the screen.

84
00:04:31.366 --> 00:04:33.236 A:middle
And others, like myself,
are getting a little older

85
00:04:33.236 --> 00:04:35.956 A:middle
and want a little bit bigger
text to make it comfortable

86
00:04:35.956 --> 00:04:37.086 A:middle
to read, wants something larger.

87
00:04:37.646 --> 00:04:42.046 A:middle
And so it's not just one set of
sizes our designers have chosen.

88
00:04:43.186 --> 00:04:44.466 A:middle
They've chose an entire family.

89
00:04:45.046 --> 00:04:48.226 A:middle
And everyone of these fonts
contains those careful

90
00:04:48.226 --> 00:04:51.006 A:middle
adjustments with literarily
pixel level accuracy

91
00:04:51.006 --> 00:04:52.866 A:middle
on every single font
that was scrutinized.

92
00:04:52.866 --> 00:04:55.966 A:middle
So let's take a look
at an application

93
00:04:55.966 --> 00:04:57.426 A:middle
which is adapted Dynamic Type.

94
00:04:57.426 --> 00:04:59.796 A:middle
This is the Mail application

95
00:04:59.796 --> 00:05:01.336 A:middle
and on the left you
see the message list

96
00:05:01.486 --> 00:05:02.876 A:middle
and on the right you
see the message body.

97
00:05:03.456 --> 00:05:06.056 A:middle
And this is at the smallest
size available to the user.

98
00:05:07.566 --> 00:05:09.416 A:middle
And as we step up
through the sizes,

99
00:05:10.066 --> 00:05:12.366 A:middle
notice that not only are
the fonts getting larger,

100
00:05:12.366 --> 00:05:14.666 A:middle
but the layout is changing.

101
00:05:15.876 --> 00:05:18.136 A:middle
The space between the
lines of text and the space

102
00:05:18.136 --> 00:05:20.976 A:middle
between the text and adjacent
UI element is all changing

103
00:05:20.976 --> 00:05:25.066 A:middle
to make this application
look beautiful even

104
00:05:25.066 --> 00:05:26.476 A:middle
at the largest font sizes.

105
00:05:28.686 --> 00:05:31.326 A:middle
And notice that even at
this very large size,

106
00:05:32.026 --> 00:05:33.686 A:middle
the text is thin and crisp.

107
00:05:34.186 --> 00:05:38.326 A:middle
But even this largest size
isn't large enough for someone

108
00:05:38.326 --> 00:05:39.406 A:middle
with the vision impairments.

109
00:05:40.216 --> 00:05:42.906 A:middle
And for those users, we've
added a mechanism to expand

110
00:05:42.906 --> 00:05:43.886 A:middle
to that range of sizes.

111
00:05:43.886 --> 00:05:48.206 A:middle
This has the effect
of increasing the size

112
00:05:48.206 --> 00:05:51.056 A:middle
of the body font
which is the font used

113
00:05:51.056 --> 00:05:53.296 A:middle
to display the most important
content to the users,

114
00:05:53.806 --> 00:05:56.816 A:middle
given them the ability
to access their content.

115
00:06:02.216 --> 00:06:04.836 A:middle
But not all users with the
vision impairments have a

116
00:06:04.836 --> 00:06:07.026 A:middle
problem with the size of a text.

117
00:06:07.616 --> 00:06:10.376 A:middle
For some of these users it
has to do with the contrast

118
00:06:10.376 --> 00:06:12.026 A:middle
between the text
and its background.

119
00:06:13.376 --> 00:06:16.846 A:middle
So we've added another mechanism
to enhance text legibility.

120
00:06:18.166 --> 00:06:20.686 A:middle
And this has the effect
of increasing the weights

121
00:06:20.686 --> 00:06:23.356 A:middle
of the font used
across this entire grid.

122
00:06:26.676 --> 00:06:28.566 A:middle
For most users, the
default fonts

123
00:06:28.566 --> 00:06:31.726 A:middle
that our designers have
chosen work really well

124
00:06:31.726 --> 00:06:33.866 A:middle
and are beautiful
on retina displays.

125
00:06:35.036 --> 00:06:38.546 A:middle
Before those users that have
those contrast vision issues,

126
00:06:39.506 --> 00:06:40.236 A:middle
hopefully, you can see

127
00:06:40.236 --> 00:06:43.996 A:middle
on the screen how enhancing the
weight really does increase the

128
00:06:43.996 --> 00:06:45.756 A:middle
contrast and make this content

129
00:06:45.756 --> 00:06:47.026 A:middle
that makes more accessible
to the user.

130
00:06:47.606 --> 00:06:53.586 A:middle
So in addition to these eight
styles there are wide ranges

131
00:06:53.586 --> 00:06:54.956 A:middle
of variance that you can use.

132
00:06:56.306 --> 00:07:00.606 A:middle
From Bold and Italic variance,
to variance that have looser

133
00:07:00.606 --> 00:07:03.336 A:middle
or tighter line letting as well
as the wide variety of others.

134
00:07:03.336 --> 00:07:06.216 A:middle
So you've actually have an
enormous spectrum of fonts

135
00:07:06.216 --> 00:07:09.526 A:middle
to use to design your
application, and everyone

136
00:07:09.526 --> 00:07:12.816 A:middle
of those contains those
specific size adjustments

137
00:07:12.816 --> 00:07:14.546 A:middle
and accessibility enhancements.

138
00:07:16.576 --> 00:07:22.776 A:middle
So Dynamic Type includes
the text styles,

139
00:07:23.606 --> 00:07:27.046 A:middle
it includes user settable
sizes including enhance

140
00:07:27.046 --> 00:07:28.416 A:middle
to accessibility sizes

141
00:07:28.906 --> 00:07:33.456 A:middle
and it contains these
legibility enhancements.

142
00:07:33.956 --> 00:07:39.156 A:middle
And so, by simply changing
the way you specify your

143
00:07:39.156 --> 00:07:43.806 A:middle
application, from specifying
specific fonts, specific sizes,

144
00:07:44.036 --> 00:07:47.736 A:middle
to using text styles and letting
the system pick the font for you

145
00:07:47.986 --> 00:07:49.506 A:middle
and adjusting your
layout appropriately,

146
00:07:50.066 --> 00:07:53.406 A:middle
and adapting this
single new method,

147
00:07:53.896 --> 00:07:56.776 A:middle
you get all of these features
and users benefit from this.

148
00:07:56.776 --> 00:08:02.666 A:middle
So let's talk about
Letterpress for a second.

149
00:08:04.126 --> 00:08:06.796 A:middle
Letterpress is a form of
relief printing where text

150
00:08:06.796 --> 00:08:08.536 A:middle
and graphics are
pressed into the paper

151
00:08:08.866 --> 00:08:11.076 A:middle
and it deforms the paper
creating the highlights

152
00:08:11.076 --> 00:08:15.166 A:middle
and shadows which creates
a real sense of depth.

153
00:08:16.386 --> 00:08:18.956 A:middle
And we use this to
ourselves in the notes,

154
00:08:18.956 --> 00:08:20.476 A:middle
in reminders applications
and we want

155
00:08:20.476 --> 00:08:21.756 A:middle
to make it available to you.

156
00:08:22.386 --> 00:08:27.216 A:middle
So you can see there're this
complex shadows and highlights.

157
00:08:27.216 --> 00:08:29.986 A:middle
And if you compare this to
a piece of printed text,

158
00:08:30.386 --> 00:08:32.006 A:middle
you can really see
how they compare.

159
00:08:32.006 --> 00:08:35.405 A:middle
Now this have an incredibly
complex graphical effect

160
00:08:35.405 --> 00:08:37.535 A:middle
but it's trivial for you to
turn on in your application.

161
00:08:38.496 --> 00:08:40.106 A:middle
You set a single
additional attribute

162
00:08:40.106 --> 00:08:42.726 A:middle
on your attributed string
and now anywhere in your UI

163
00:08:42.726 --> 00:08:43.775 A:middle
that you're displaying text,

164
00:08:43.775 --> 00:08:46.046 A:middle
you can now display
Letterpress text.

165
00:08:46.046 --> 00:08:46.113 A:middle
[ Applause ]

166
00:08:46.113 --> 00:08:57.426 A:middle
So part of beautiful typography
is kerning and ligatures.

167
00:08:58.266 --> 00:08:59.396 A:middle
And we've turned on kerning

168
00:08:59.396 --> 00:09:01.776 A:middle
and ligatures everywhere
in the OS and iOS 7.

169
00:09:03.046 --> 00:09:06.096 A:middle
And so text which rendered like
this in prior version of iOS,

170
00:09:06.606 --> 00:09:08.146 A:middle
now renders properly kerned.

171
00:09:08.686 --> 00:09:12.676 A:middle
And text like the word "shuffle"
here when rendered in a font

172
00:09:12.676 --> 00:09:15.426 A:middle
that contents ffl ligature will
automatically take advantage

173
00:09:15.426 --> 00:09:16.026 A:middle
of that ligature.

174
00:09:16.566 --> 00:09:20.426 A:middle
But it goes way beyond
simple kerning and ligatures.

175
00:09:21.136 --> 00:09:23.816 A:middle
In iOS 7, we've opened
the entire spectrum

176
00:09:23.816 --> 00:09:26.256 A:middle
of advance typographical
features to you--

177
00:09:26.256 --> 00:09:27.926 A:middle
for you use to use
in your applications

178
00:09:28.256 --> 00:09:29.556 A:middle
from ornamental ligatures

179
00:09:29.556 --> 00:09:31.886 A:middle
to advance rendering
effects like text etching.

180
00:09:32.386 --> 00:09:38.496 A:middle
[ Pause ]

181
00:09:38.996 --> 00:09:42.826 A:middle
I've been excited to talk about
this next topic for a long time.

182
00:09:43.596 --> 00:09:46.396 A:middle
We've been working on this
technology for nearly two years

183
00:09:47.346 --> 00:09:49.126 A:middle
and it's at the heart of all

184
00:09:49.126 --> 00:09:50.846 A:middle
of the advance typographic
features we see

185
00:09:50.846 --> 00:09:55.196 A:middle
in iOS 7, and that's Textkit.

186
00:09:55.196 --> 00:09:57.926 A:middle
Textkit is a modern
object-oriented,

187
00:09:58.146 --> 00:10:03.276 A:middle
high level text API that's
built on top of Core Text.

188
00:10:03.686 --> 00:10:08.816 A:middle
And we've rewritten all of our
text related controls in UIKit

189
00:10:08.896 --> 00:10:10.976 A:middle
to take advantage of
the power of Textkit.

190
00:10:11.516 --> 00:10:16.536 A:middle
It gives you complete control
over the layout and rendering

191
00:10:16.536 --> 00:10:18.226 A:middle
of text and other
related components.

192
00:10:18.496 --> 00:10:20.586 A:middle
And it works great for
simple runs of texts

193
00:10:20.586 --> 00:10:23.166 A:middle
like this all they way
through advanced page layout

194
00:10:23.166 --> 00:10:27.436 A:middle
functionality including multiple
text regions, imbedded content

195
00:10:27.786 --> 00:10:29.736 A:middle
and either wrapping text
around arbitrary shapes

196
00:10:29.736 --> 00:10:31.496 A:middle
like the flowers you
see in the left corner.

197
00:10:33.276 --> 00:10:36.806 A:middle
TexKit is powerful and easy
enough to do all these things

198
00:10:37.986 --> 00:10:41.376 A:middle
and it's one to two
orders of magnitude easier

199
00:10:41.666 --> 00:10:43.656 A:middle
than doing the same
things in Core Text.

200
00:10:44.156 --> 00:10:51.106 A:middle
[ Applause ]

201
00:10:51.606 --> 00:10:53.176 A:middle
So there's a lot
here in Textkit.

202
00:10:53.986 --> 00:10:56.836 A:middle
And because of the increased
emphasis on typography in iOS 7,

203
00:10:56.836 --> 00:11:00.506 A:middle
I encourage you all to make
it to these sessions and find

204
00:11:00.506 --> 00:11:01.696 A:middle
out about Textkit and find

205
00:11:01.696 --> 00:11:03.836 A:middle
out how you can use this
powerful new framework

206
00:11:04.476 --> 00:11:05.486 A:middle
in your applications.

207
00:11:06.006 --> 00:11:07.936 A:middle
And with that I'd like
to turn it over to Andy,

208
00:11:07.936 --> 00:11:10.356 A:middle
who's going to take us through
a few more changes in UIKit.

209
00:11:10.356 --> 00:11:11.506 A:middle
[ Applause ]

210
00:11:11.506 --> 00:11:15.176 A:middle
&gt;&gt; Thanks Jason.

211
00:11:16.886 --> 00:11:20.296 A:middle
You know, text is so important
to us, and we've spent

212
00:11:20.586 --> 00:11:23.206 A:middle
so much time making
it better on iOS.

213
00:11:23.716 --> 00:11:24.896 A:middle
Not just because
of the aesthetics--

214
00:11:24.896 --> 00:11:25.906 A:middle
we think they're
really beautiful--

215
00:11:26.276 --> 00:11:28.496 A:middle
but also because
of the function.

216
00:11:28.996 --> 00:11:32.006 A:middle
You know, one of those principle
design themes that we considered

217
00:11:32.006 --> 00:11:35.336 A:middle
when designing iOS 7
was that of deference--

218
00:11:35.986 --> 00:11:37.486 A:middle
that the content comes first--

219
00:11:38.456 --> 00:11:41.686 A:middle
and the ornamentation and the
chrome of the system needs

220
00:11:41.686 --> 00:11:43.986 A:middle
to get out of the way
and exalt that content.

221
00:11:45.456 --> 00:11:49.176 A:middle
So looking now at Mail,
you notice a few things.

222
00:11:50.366 --> 00:11:53.386 A:middle
One, we've expanded those
photos horizontally all the way

223
00:11:53.386 --> 00:11:54.356 A:middle
to the edge of the screen.

224
00:11:55.116 --> 00:11:56.886 A:middle
But we haven't just
expanded them horizontally:

225
00:11:57.726 --> 00:12:02.026 A:middle
we've also expanded the main
scrolling text view vertically

226
00:12:02.296 --> 00:12:05.466 A:middle
underneath the bars at the top
and the bottom of the screen.

227
00:12:06.006 --> 00:12:08.016 A:middle
You'll see the-- the
boy's purple shirt

228
00:12:08.856 --> 00:12:11.656 A:middle
and red pants scroll
underneath those bars.

229
00:12:11.916 --> 00:12:13.276 A:middle
That gives you a
sense of context,

230
00:12:14.066 --> 00:12:15.696 A:middle
and it also gives
a little more space

231
00:12:16.036 --> 00:12:17.756 A:middle
for the content to ring through.

232
00:12:19.416 --> 00:12:23.256 A:middle
So, we're actually doing this
on navigation bars, toolbars,

233
00:12:23.386 --> 00:12:26.466 A:middle
tab bars, all throughout our
operating system, not just Mail.

234
00:12:27.176 --> 00:12:30.296 A:middle
And so there are some things
you need to know about changes

235
00:12:30.536 --> 00:12:33.946 A:middle
in the View Controller
system and elsewhere in UIKit

236
00:12:34.536 --> 00:12:37.246 A:middle
that make all of this full
screen concept possible.

237
00:12:39.036 --> 00:12:41.886 A:middle
Now, obviously, one of the
first changes is just layout.

238
00:12:42.566 --> 00:12:45.986 A:middle
You'll see first
that we're not trying

239
00:12:45.986 --> 00:12:47.656 A:middle
to avoid those bars anymore.

240
00:12:48.966 --> 00:12:52.486 A:middle
We're now putting the geometry
of your View Controller's views

241
00:12:52.486 --> 00:12:55.396 A:middle
and your modally presented View
Controller's views all the way

242
00:12:55.396 --> 00:12:57.156 A:middle
up underneath the
navigation bar,

243
00:12:57.156 --> 00:12:59.956 A:middle
underneath the status
bar by default.

244
00:13:00.486 --> 00:13:03.776 A:middle
And those bars, yes,
they're transparent,

245
00:13:04.506 --> 00:13:06.756 A:middle
but they're not just
transparent in the way

246
00:13:06.756 --> 00:13:09.706 A:middle
that iOS 6's transparent
bars can be configured.

247
00:13:10.086 --> 00:13:10.986 A:middle
They're actually blurred.

248
00:13:12.016 --> 00:13:13.476 A:middle
And they're not even
just blurred

249
00:13:14.106 --> 00:13:16.076 A:middle
when there's a photo
behind them for instance.

250
00:13:16.476 --> 00:13:19.966 A:middle
We up the saturation of that
photo and we adjust the levels

251
00:13:19.966 --> 00:13:21.656 A:middle
to really make those colors pop.

252
00:13:22.496 --> 00:13:24.666 A:middle
And when there's text
behind those bars,

253
00:13:25.156 --> 00:13:27.656 A:middle
we increase the opacity
of the bars so that

254
00:13:27.656 --> 00:13:30.806 A:middle
that text doesn't
interfere with what's on top.

255
00:13:32.656 --> 00:13:36.006 A:middle
The status bar has
changed as well.

256
00:13:36.826 --> 00:13:39.266 A:middle
And in fact, it no longer
has a background of any kind.

257
00:13:39.916 --> 00:13:42.726 A:middle
What you're seeing there is
actually the navigation bar

258
00:13:43.086 --> 00:13:45.546 A:middle
extending up and
under the status bar.

259
00:13:46.956 --> 00:13:49.316 A:middle
And so, if you had a design
without a navigation bar,

260
00:13:49.316 --> 00:13:50.806 A:middle
you would have to make
sure that the content

261
00:13:50.806 --> 00:13:51.666 A:middle
that appears underneath

262
00:13:51.726 --> 00:13:53.756 A:middle
that status bar is
appropriate for you.

263
00:13:54.936 --> 00:13:58.856 A:middle
Now, when we scroll all they way
to the top of this Mail Message,

264
00:13:59.946 --> 00:14:01.706 A:middle
we want to make sure
that the header

265
00:14:01.706 --> 00:14:05.196 A:middle
of the Mail Message still
appears below the navigation

266
00:14:05.196 --> 00:14:09.646 A:middle
bar, and we do this by default
in iOS 7 by automatically

267
00:14:09.726 --> 00:14:12.236 A:middle
and aggressively
adjusting the content insets

268
00:14:12.746 --> 00:14:14.506 A:middle
of your View Controller's
content views

269
00:14:14.506 --> 00:14:17.676 A:middle
if there are scroll views,
just to make sure that all

270
00:14:17.676 --> 00:14:19.526 A:middle
that content will be
visible for the user.

271
00:14:19.526 --> 00:14:24.246 A:middle
Now, let's take a look at
another user interface.

272
00:14:25.086 --> 00:14:26.876 A:middle
This is Game Center on iOS 7.

273
00:14:28.296 --> 00:14:31.126 A:middle
In Game Center, this content
is actually not scrollable.

274
00:14:31.786 --> 00:14:36.506 A:middle
And that's okay, but it might
mean that it's a little awkward

275
00:14:37.346 --> 00:14:39.836 A:middle
to specify this UI, which
is really appearing inside

276
00:14:39.836 --> 00:14:42.746 A:middle
of this gold box, with
respect to the full screen.

277
00:14:43.256 --> 00:14:46.556 A:middle
You might like to specify
it as you did on iOS 6.

278
00:14:47.046 --> 00:14:50.866 A:middle
And so there is API to
permit that kind of design.

279
00:14:51.806 --> 00:14:55.446 A:middle
New on UIViewController, we have
a property called Extended Edges

280
00:14:55.626 --> 00:15:00.226 A:middle
for Layout, which describes
the edges of the screen along

281
00:15:00.226 --> 00:15:01.796 A:middle
which we're going
to extend the layout

282
00:15:02.436 --> 00:15:03.896 A:middle
of your View Controller's views.

283
00:15:04.906 --> 00:15:07.216 A:middle
So by default, it's All because
we're extending them everywhere.

284
00:15:08.266 --> 00:15:09.756 A:middle
We want your views
to be full screen.

285
00:15:10.756 --> 00:15:12.836 A:middle
But if you'd like, you can
specify None, for instance,

286
00:15:13.156 --> 00:15:15.616 A:middle
which would put your views
pretty much as they looked

287
00:15:15.616 --> 00:15:19.426 A:middle
in iOS 6, trying to
avoid the bars at the top

288
00:15:19.426 --> 00:15:22.636 A:middle
of the bottom of the screen.

289
00:15:22.796 --> 00:15:25.196 A:middle
There's another layout issue
that you need to be aware of

290
00:15:25.726 --> 00:15:28.616 A:middle
and it looks a little bit
like here in the photos.

291
00:15:28.686 --> 00:15:30.686 A:middle
Now, if you look
at this HDR icon,

292
00:15:32.076 --> 00:15:35.736 A:middle
it's positioned just a couple of
points below the Navigation Bar.

293
00:15:36.316 --> 00:15:39.846 A:middle
But of course, the Navigation
Bar is a different height

294
00:15:40.566 --> 00:15:42.466 A:middle
in portrait and in landscape.

295
00:15:43.786 --> 00:15:47.716 A:middle
So the origin of that
HDR icon is different

296
00:15:47.716 --> 00:15:48.636 A:middle
in each orientation.

297
00:15:48.636 --> 00:15:51.276 A:middle
And we need a good
way to specify that,

298
00:15:51.796 --> 00:15:53.196 A:middle
hopefully as simply as possible,

299
00:15:53.196 --> 00:15:54.766 A:middle
and we've introduced
that with iOS 7.

300
00:15:55.096 --> 00:15:57.446 A:middle
View controllers now
have a top layout guide

301
00:15:57.446 --> 00:16:01.466 A:middle
and a bottom layout guide that
describe where those features

302
00:16:01.466 --> 00:16:02.806 A:middle
at the top and bottom
of the screen

303
00:16:02.996 --> 00:16:04.656 A:middle
that might overlap
your content are.

304
00:16:05.756 --> 00:16:07.606 A:middle
And even better, you can
actually now use them

305
00:16:07.606 --> 00:16:08.306 A:middle
with Auto Layout.

306
00:16:08.576 --> 00:16:11.496 A:middle
So a single constraint
like this one would keep

307
00:16:11.496 --> 00:16:15.606 A:middle
that HDR icon three points
below that navigation bar.

308
00:16:16.446 --> 00:16:18.196 A:middle
And when you rotate from
portrait to landscape,

309
00:16:18.196 --> 00:16:20.296 A:middle
it would get automatically
adjusted for you.

310
00:16:20.946 --> 00:16:24.876 A:middle
So as I said, the status
bar styles have changed

311
00:16:25.476 --> 00:16:27.616 A:middle
and they don't have
a background.

312
00:16:28.056 --> 00:16:29.276 A:middle
They have dark content
by default.

313
00:16:30.176 --> 00:16:33.236 A:middle
And so what that means is that
if you're putting dark content

314
00:16:33.416 --> 00:16:34.986 A:middle
in your views behind
the status bar,

315
00:16:35.316 --> 00:16:37.956 A:middle
you probably want a light status
bar foreground, and we've made

316
00:16:37.956 --> 00:16:42.296 A:middle
that available to
you via this new API.

317
00:16:42.296 --> 00:16:47.066 A:middle
These other two APIs describe
the nature of the background

318
00:16:47.436 --> 00:16:49.946 A:middle
of the status bar, so they've
been deprecated in iOS 7.

319
00:16:50.486 --> 00:16:53.576 A:middle
And if you specify them, you'll
get the light content style.

320
00:16:54.266 --> 00:16:59.296 A:middle
Now, because in iOS
7, it is so important

321
00:16:59.736 --> 00:17:02.266 A:middle
to specify the correct
style and visibility

322
00:17:02.266 --> 00:17:04.036 A:middle
for the status bar
due to the fact

323
00:17:04.036 --> 00:17:05.116 A:middle
that it doesn't have
a background,

324
00:17:05.896 --> 00:17:07.425 A:middle
we've made that a
little easier for you.

325
00:17:08.425 --> 00:17:11.256 A:middle
Rather than having to
manually manage the disposition

326
00:17:11.256 --> 00:17:14.486 A:middle
of the status bar across
the various UI screens

327
00:17:14.486 --> 00:17:18.336 A:middle
of your application, you can now
specify the styles declaratively

328
00:17:19.236 --> 00:17:21.506 A:middle
by using these properties
on UIViewController.

329
00:17:21.945 --> 00:17:24.715 A:middle
In that way, as View Controllers
are pushed and popped

330
00:17:25.185 --> 00:17:28.215 A:middle
or switched between on tab
controllers, modally presented

331
00:17:28.386 --> 00:17:31.976 A:middle
and dismissed, UIKit will
automatically manage the status

332
00:17:31.976 --> 00:17:32.576 A:middle
bar for you.

333
00:17:33.206 --> 00:17:37.616 A:middle
Now, this is a pretty big change
in behavior, so it's controlled

334
00:17:37.616 --> 00:17:39.066 A:middle
by a switch in the
info key list.

335
00:17:40.306 --> 00:17:41.596 A:middle
It's off by default in Seed I.

336
00:17:42.116 --> 00:17:44.866 A:middle
So if you'd like to experiment
with this API, just go ahead

337
00:17:44.866 --> 00:17:47.146 A:middle
and set that key to YES
because we're going to turn it

338
00:17:47.216 --> 00:17:48.626 A:middle
on by default in future seeds.

339
00:17:49.346 --> 00:17:52.596 A:middle
Now, we're going to
leave it there so that

340
00:17:53.816 --> 00:17:55.946 A:middle
if you have a legacy code
base which does a lot

341
00:17:55.946 --> 00:17:59.876 A:middle
of manual status bar management,
you can keep that code around

342
00:18:00.086 --> 00:18:02.116 A:middle
and just set this key to
NO to get the old behavior.

343
00:18:02.726 --> 00:18:06.966 A:middle
So that's full screen content.

344
00:18:08.116 --> 00:18:13.356 A:middle
But when it comes to content,
it's not just about giving it

345
00:18:13.356 --> 00:18:14.406 A:middle
as much space as possible.

346
00:18:15.486 --> 00:18:16.816 A:middle
It's also about making sure

347
00:18:16.816 --> 00:18:20.566 A:middle
that the user can quickly access
the part that they want to get

348
00:18:20.656 --> 00:18:23.896 A:middle
to and quickly perform
the actions that they want

349
00:18:23.896 --> 00:18:26.386 A:middle
to perform within
that application.

350
00:18:27.006 --> 00:18:32.216 A:middle
So we've sought to add that kind
of functionality in a number

351
00:18:32.216 --> 00:18:33.826 A:middle
of places throughout
the operating system,

352
00:18:34.286 --> 00:18:36.126 A:middle
and I'd like to talk about
one of those places now.

353
00:18:37.106 --> 00:18:40.396 A:middle
So here's Mail again, and note
that we can move our finger

354
00:18:40.716 --> 00:18:43.386 A:middle
from the edge of the screen
inwards to navigate backward.

355
00:18:43.386 --> 00:18:46.976 A:middle
And the navigation
controller tracks interactively

356
00:18:46.976 --> 00:18:47.626 A:middle
that transition.

357
00:18:47.626 --> 00:18:52.616 A:middle
There's a piece of API that
allows you to get access

358
00:18:53.136 --> 00:18:54.336 A:middle
to that gesture recognizer.

359
00:18:54.816 --> 00:18:58.226 A:middle
So if you need to temporarily
disable it or if you need

360
00:18:58.226 --> 00:18:59.896 A:middle
to specify for instance that one

361
00:18:59.896 --> 00:19:02.886 A:middle
of your gesture recognizers
should recognize simultaneously

362
00:19:03.306 --> 00:19:06.756 A:middle
with this interactive pop, you
can do that using this API.

363
00:19:07.796 --> 00:19:12.216 A:middle
But we're really excited about
what this gesture portends,

364
00:19:13.106 --> 00:19:16.316 A:middle
not just because it lets us
easily navigate backwards

365
00:19:16.616 --> 00:19:18.516 A:middle
in navigation stacks.

366
00:19:19.156 --> 00:19:22.866 A:middle
The transitions throughout all

367
00:19:22.866 --> 00:19:26.216 A:middle
of iOS 7 have been made
a great deal more fluid.

368
00:19:27.306 --> 00:19:28.956 A:middle
And so, you'll see
here in Calendar

369
00:19:29.816 --> 00:19:32.916 A:middle
that as we start tapping
from year, to month,

370
00:19:33.796 --> 00:19:37.476 A:middle
to day that we're zooming
on this infinite plane,

371
00:19:38.026 --> 00:19:41.746 A:middle
and that's communicating
something about the nature

372
00:19:41.746 --> 00:19:44.056 A:middle
of the information
in this application.

373
00:19:45.236 --> 00:19:48.876 A:middle
It's not just laid out in a
series of horizontal screens.

374
00:19:49.946 --> 00:19:51.876 A:middle
We're moving through
it in a new way.

375
00:19:53.216 --> 00:19:55.096 A:middle
It also gives the Calendar
app some personality.

376
00:19:56.216 --> 00:19:58.066 A:middle
So this technique is
very exciting to us.

377
00:19:58.946 --> 00:20:00.896 A:middle
And we're actually going
to provide it to all of you

378
00:20:01.306 --> 00:20:03.826 A:middle
in the form of a new
UIViewController API

379
00:20:04.406 --> 00:20:07.086 A:middle
that allows you to
specify custom animated

380
00:20:07.356 --> 00:20:09.836 A:middle
and interactive transitions
for your View Controllers.

381
00:20:09.836 --> 00:20:15.436 A:middle
We're using it in a number of
places throughout the system,

382
00:20:15.836 --> 00:20:17.216 A:middle
and I'd like to show
you this one

383
00:20:17.606 --> 00:20:21.686 A:middle
because this is a Collection
View, and we've made this kind

384
00:20:21.686 --> 00:20:23.766 A:middle
of transition even easier.

385
00:20:24.436 --> 00:20:28.856 A:middle
So here's Photos, and we'll zoom
in from years, to collections,

386
00:20:29.626 --> 00:20:31.086 A:middle
to moments, to a single photo.

387
00:20:31.896 --> 00:20:34.546 A:middle
Note that we get this new
spatial representation

388
00:20:34.896 --> 00:20:36.916 A:middle
of the information, and
we'll zoom all the way back

389
00:20:36.916 --> 00:20:39.906 A:middle
out to SpringBoard, and you see

390
00:20:39.906 --> 00:20:43.036 A:middle
that concept is reinforced
throughout the system.

391
00:20:43.606 --> 00:20:47.346 A:middle
So we've made it really easy
for you to implement these kinds

392
00:20:47.346 --> 00:20:51.196 A:middle
of transitions, if you're using
UICollectionView in iOS 7.

393
00:20:51.526 --> 00:20:53.756 A:middle
And I'd like to briefly describe
how that works to you now.

394
00:20:54.736 --> 00:20:56.796 A:middle
So to make it easy
we're just going

395
00:20:56.796 --> 00:20:59.286 A:middle
to consider the top two levels
of that navigation stack,

396
00:20:59.856 --> 00:21:03.146 A:middle
the year's user interface, and
the collection's user interface.

397
00:21:04.386 --> 00:21:06.526 A:middle
And I just want to run
through how you'd go

398
00:21:06.526 --> 00:21:07.336 A:middle
about implementing them.

399
00:21:07.396 --> 00:21:11.456 A:middle
Now you would start with perhaps
a Collection View flow layout

400
00:21:11.926 --> 00:21:13.786 A:middle
that you've customized
to make your layout,

401
00:21:13.786 --> 00:21:16.916 A:middle
and that would describe the
geometry of that user interface,

402
00:21:16.916 --> 00:21:19.266 A:middle
and then you'd make a
Collection View Controller

403
00:21:19.466 --> 00:21:21.566 A:middle
with that layout, and the
Collection View controller would

404
00:21:21.566 --> 00:21:23.136 A:middle
manage the Collection
View as you see here.

405
00:21:24.606 --> 00:21:28.756 A:middle
Now, this is going to be a
hierarchy, so you would push

406
00:21:28.756 --> 00:21:31.806 A:middle
that Collection View Controller
onto a navigation stack.

407
00:21:33.516 --> 00:21:36.706 A:middle
Turning our attention now
to the "collections" view,

408
00:21:37.636 --> 00:21:39.216 A:middle
we would similarly
create a layout for it

409
00:21:39.216 --> 00:21:41.706 A:middle
and make a Collection
View Controller for that.

410
00:21:42.926 --> 00:21:46.076 A:middle
But before we push it on, we're
going to use this new piece

411
00:21:46.076 --> 00:21:49.756 A:middle
of API, usesLayoutToLayout
NavigationTransitions.

412
00:21:50.826 --> 00:21:52.256 A:middle
And when we set that to YES

413
00:21:52.476 --> 00:21:55.336 A:middle
on the second Collection
View Controller and push it

414
00:21:55.336 --> 00:21:56.506 A:middle
on the navigation stack,

415
00:21:57.336 --> 00:21:59.456 A:middle
behind the scenes UIKit
is actually going to use

416
00:21:59.456 --> 00:22:02.806 A:middle
that same Collection View
for both View Controllers.

417
00:22:03.796 --> 00:22:05.676 A:middle
And it's going to
animate the transition

418
00:22:06.216 --> 00:22:07.836 A:middle
between the CollectionV
iew layouts

419
00:22:07.836 --> 00:22:11.076 A:middle
at each level alongside
the navigation transition.

420
00:22:12.216 --> 00:22:15.176 A:middle
And in fact, if the user scrubs
their finger along the side

421
00:22:15.176 --> 00:22:16.766 A:middle
of the screen like I was
showing you with Mail,

422
00:22:17.016 --> 00:22:18.836 A:middle
we'll actually scrub
through the transition

423
00:22:18.836 --> 00:22:19.656 A:middle
between those layouts.

424
00:22:20.296 --> 00:22:22.766 A:middle
And you can even define your own
interactions which drive those

425
00:22:22.766 --> 00:22:23.786 A:middle
like a pinch for instance.

426
00:22:24.836 --> 00:22:28.556 A:middle
So we're really excited about
what you can do with these kinds

427
00:22:28.556 --> 00:22:30.586 A:middle
of custom animated transitions

428
00:22:30.586 --> 00:22:32.276 A:middle
and the custom interactions
that drive them.

429
00:22:33.026 --> 00:22:36.446 A:middle
We're using them throughout
iOS in order to communicate

430
00:22:36.446 --> 00:22:39.006 A:middle
where information is in the
applications and in order

431
00:22:39.006 --> 00:22:40.926 A:middle
to give our applications
a personality.

432
00:22:40.926 --> 00:22:43.326 A:middle
So we have a whole talk
that goes into more detail

433
00:22:43.646 --> 00:22:48.526 A:middle
of how all this stuff works, and
I encourage you to check it out.

434
00:22:48.806 --> 00:22:52.226 A:middle
Now, another way we're
communicating in iOS 7 is

435
00:22:52.296 --> 00:22:53.166 A:middle
through the use of color.

436
00:22:53.876 --> 00:22:58.206 A:middle
We stripped out a lot of
ornamentation in this interface.

437
00:22:58.886 --> 00:23:03.136 A:middle
But in order to make sure
that things are still clear,

438
00:23:04.636 --> 00:23:09.166 A:middle
we're using color to signify
interactivity and selection.

439
00:23:09.996 --> 00:23:13.376 A:middle
So you'll see for instance
that those buttons on the top

440
00:23:13.376 --> 00:23:16.766 A:middle
and bottom bars are red, whereas
the rest of the content is black

441
00:23:16.766 --> 00:23:20.186 A:middle
and white, except of course for
that 11 which is the day's date.

442
00:23:21.276 --> 00:23:23.476 A:middle
So it quickly draws the
user's eye to those things.

443
00:23:23.476 --> 00:23:28.636 A:middle
And that red also creates a
nice theme for the Calendar app.

444
00:23:29.026 --> 00:23:29.746 A:middle
It's cohesive.

445
00:23:30.126 --> 00:23:31.196 A:middle
And as we look at Notes,

446
00:23:31.466 --> 00:23:33.246 A:middle
you'll see that we're
using yellow there,

447
00:23:33.966 --> 00:23:35.046 A:middle
and purple in Game Center.

448
00:23:36.156 --> 00:23:37.806 A:middle
So this is one of the
techniques that we've used

449
00:23:37.806 --> 00:23:40.556 A:middle
to create an identity for
each of these applications

450
00:23:41.206 --> 00:23:44.716 A:middle
in the user interface which
is otherwise explicitly devoid

451
00:23:45.186 --> 00:23:47.016 A:middle
of the ornamentation and imagery

452
00:23:47.266 --> 00:23:49.566 A:middle
that we might have
previously used to do that.

453
00:23:50.896 --> 00:23:53.396 A:middle
So this is all made
possible available to you

454
00:23:54.056 --> 00:23:55.986 A:middle
through a new top
level UIKit API.

455
00:23:56.526 --> 00:23:57.806 A:middle
We've promoted tint color

456
00:23:58.826 --> 00:24:01.356 A:middle
from certain UIControls
all the way up to UIView.

457
00:24:01.356 --> 00:24:03.726 A:middle
You can set it on any UIView.

458
00:24:04.206 --> 00:24:06.966 A:middle
And it's actually a
hierarchical property.

459
00:24:07.406 --> 00:24:10.886 A:middle
And so for instance, if you were
to set red color on your window,

460
00:24:11.746 --> 00:24:15.536 A:middle
then any UIViews in
that window which looked

461
00:24:15.536 --> 00:24:18.376 A:middle
at tint color would get red.

462
00:24:19.346 --> 00:24:22.886 A:middle
By default, that includes
all default UIKit controls,

463
00:24:23.346 --> 00:24:27.366 A:middle
but we encourage you to
implement any kind of custom UIs

464
00:24:27.366 --> 00:24:30.016 A:middle
in your application which
take advantage of key colors

465
00:24:30.066 --> 00:24:33.116 A:middle
in this way using this API.

466
00:24:33.856 --> 00:24:36.176 A:middle
The reason for that is what
I'm about to show you here,

467
00:24:36.806 --> 00:24:44.296 A:middle
and that's that when we present
an action sheet, we dim that UI.

468
00:24:44.966 --> 00:24:46.006 A:middle
It's no longer interactive.

469
00:24:46.466 --> 00:24:47.316 A:middle
It's no longer selected.

470
00:24:47.316 --> 00:24:48.766 A:middle
It's no longer important
to the user.

471
00:24:49.516 --> 00:24:52.356 A:middle
We're trying to make clear
that the buttons at the bottom

472
00:24:52.356 --> 00:24:54.056 A:middle
of the screen are what
you need to address.

473
00:24:54.056 --> 00:24:58.256 A:middle
And we actually, we
haven't just laid a grain--

474
00:24:58.256 --> 00:25:01.326 A:middle
a gray overlay over
that Notes Back button.

475
00:25:01.966 --> 00:25:04.416 A:middle
Take a look at that Back
button for a second.

476
00:25:04.416 --> 00:25:06.636 A:middle
If we had laid a gray overlay

477
00:25:06.636 --> 00:25:08.366 A:middle
over that button,
it would like this.

478
00:25:08.366 --> 00:25:13.416 A:middle
Now, there's still some yellow
there, and that yellow distracts

479
00:25:13.866 --> 00:25:17.616 A:middle
from the buttons of the bottom
of the screen and it's also kind

480
00:25:17.616 --> 00:25:19.806 A:middle
on muddy because we've mixed
a bunch of gray with it.

481
00:25:19.896 --> 00:25:23.616 A:middle
So instead we're desaturating
the tint color that you give us.

482
00:25:24.756 --> 00:25:27.856 A:middle
And so, if you have any custom
UIViews in your application

483
00:25:28.066 --> 00:25:30.606 A:middle
which should desaturate in
the same way, all you have

484
00:25:30.606 --> 00:25:33.596 A:middle
to do is implement
tintColorDidChange

485
00:25:34.116 --> 00:25:34.826 A:middle
on those views.

486
00:25:35.216 --> 00:25:38.726 A:middle
And then when you next consult
the tint color you'll get the

487
00:25:38.816 --> 00:25:41.326 A:middle
saturated or desaturated version

488
00:25:41.406 --> 00:25:46.056 A:middle
as appropriate given the
application's present state.

489
00:25:46.256 --> 00:25:51.926 A:middle
Now, customization in UIKit
has changed a great deal

490
00:25:52.556 --> 00:25:53.256 A:middle
with this new look.

491
00:25:53.306 --> 00:25:57.036 A:middle
A lot of UIAppearance methods
have different semantics.

492
00:25:57.996 --> 00:25:59.826 A:middle
And of course we're
using color in new ways

493
00:25:59.866 --> 00:26:01.156 A:middle
that I've barely
scratched the surface

494
00:26:01.206 --> 00:26:03.056 A:middle
of in this brief discussion.

495
00:26:03.966 --> 00:26:07.396 A:middle
So later this week, we have a
talk specifically on this topic,

496
00:26:07.396 --> 00:26:12.446 A:middle
and I encourage to check out how
you can use UIAppearance calls

497
00:26:12.446 --> 00:26:15.326 A:middle
and some new APIs that we've
created especially for tinting

498
00:26:15.326 --> 00:26:18.246 A:middle
and color to make your
application look unique,

499
00:26:18.316 --> 00:26:22.666 A:middle
to give it an identity
on the platform,

500
00:26:22.666 --> 00:26:24.936 A:middle
and to pursue the
same kinds of things

501
00:26:24.936 --> 00:26:29.166 A:middle
that you were using the existing
UIAppearance APIs for on iOS 6.

502
00:26:30.276 --> 00:26:32.556 A:middle
So with that, I'd like to
turn it back over to Jason.

503
00:26:32.556 --> 00:26:34.556 A:middle
He's going to show you some
more of the great stuff

504
00:26:34.556 --> 00:26:43.696 A:middle
that we've been doing in iOS
7 for your user interfaces.

505
00:26:43.696 --> 00:26:44.356 A:middle
[ Applause ]

506
00:26:44.356 --> 00:26:47.206 A:middle
&gt;&gt; Thanks Andy.

507
00:26:47.506 --> 00:26:51.806 A:middle
Table Views are one of those
commonly used controls in UIKit

508
00:26:53.006 --> 00:26:57.226 A:middle
and we've change the appearance
fairly significantly in iOS 7

509
00:26:57.226 --> 00:26:59.866 A:middle
and there have always been
two styles of Table View,

510
00:27:00.756 --> 00:27:02.496 A:middle
a plain Table View you see
on the left and a grouped

511
00:27:02.596 --> 00:27:03.436 A:middle
that you see on the right.

512
00:27:04.916 --> 00:27:06.916 A:middle
We made most of the changes
to the grouped style.

513
00:27:07.326 --> 00:27:10.116 A:middle
We've removed the rounded
rects and background textures

514
00:27:10.506 --> 00:27:12.666 A:middle
and extended the
content edge to edge.

515
00:27:13.506 --> 00:27:15.466 A:middle
This is because we're
trying to put the focus

516
00:27:15.916 --> 00:27:17.086 A:middle
on the user's content.

517
00:27:17.526 --> 00:27:22.136 A:middle
We've also change the way we're
using Separators in Table Views.

518
00:27:23.116 --> 00:27:26.286 A:middle
They're now indented a little
bit to help show relationship

519
00:27:26.406 --> 00:27:28.066 A:middle
between related items
in the table view.

520
00:27:28.066 --> 00:27:31.496 A:middle
You have control
over this indentation

521
00:27:31.586 --> 00:27:33.996 A:middle
with the new property on table
view cell called Separator

522
00:27:33.996 --> 00:27:34.356 A:middle
in Set.

523
00:27:34.736 --> 00:27:38.276 A:middle
And we respect for the left and
the right in set on a separator.

524
00:27:41.576 --> 00:27:44.826 A:middle
Alert views have also changed
appearance fairly significantly

525
00:27:45.656 --> 00:27:46.316 A:middle
in iOS 7.

526
00:27:46.316 --> 00:27:49.356 A:middle
But we haven't changed the
API with one exception.

527
00:27:50.176 --> 00:27:51.506 A:middle
We've added the ability for you

528
00:27:51.506 --> 00:27:54.026 A:middle
to insert your own
content into Alert Views.

529
00:27:54.526 --> 00:28:01.156 A:middle
[ Applause ]

530
00:28:01.656 --> 00:28:03.276 A:middle
We know a lot of you guys
have been doing this,

531
00:28:03.276 --> 00:28:04.456 A:middle
have been asking
for way to do it.

532
00:28:05.136 --> 00:28:06.256 A:middle
It's actually super simple.

533
00:28:07.536 --> 00:28:09.646 A:middle
There's just a content new
property on the alert view.

534
00:28:10.176 --> 00:28:12.896 A:middle
And we'll adjust the layout
to add your content in.

535
00:28:13.396 --> 00:28:16.156 A:middle
[ Applause ]

536
00:28:16.656 --> 00:28:18.716 A:middle
All right let's take a walk

537
00:28:18.716 --> 00:28:20.566 A:middle
through the remaining
controls in UIKit.

538
00:28:20.996 --> 00:28:22.206 A:middle
And first off is buttons.

539
00:28:23.476 --> 00:28:25.746 A:middle
Buttons have a dramatically
simpler look.

540
00:28:26.336 --> 00:28:28.956 A:middle
They're just represented by
a piece of text or an icon.

541
00:28:29.136 --> 00:28:30.786 A:middle
We've remove the back--

542
00:28:30.786 --> 00:28:32.516 A:middle
the borders and the
background textures

543
00:28:32.516 --> 00:28:34.236 A:middle
and exactly the same
way we did for the bars.

544
00:28:34.236 --> 00:28:38.096 A:middle
And for the same reason, because
those heavyweight controls

545
00:28:38.096 --> 00:28:41.096 A:middle
distract the user from the
content, from what's important.

546
00:28:41.616 --> 00:28:46.586 A:middle
We've added a new system style

547
00:28:46.646 --> 00:28:49.336 A:middle
and deprecated the old rounded
rect style in support of this.

548
00:28:49.766 --> 00:28:53.756 A:middle
And we've done a similar
thing for bar button items

549
00:28:54.006 --> 00:28:55.356 A:middle
with a new plain style.

550
00:28:55.956 --> 00:29:01.936 A:middle
A segmented controls
in iOS 7 also look

551
00:29:01.936 --> 00:29:02.876 A:middle
significantly different.

552
00:29:03.886 --> 00:29:06.866 A:middle
They're largely transparent now
and they support tint color.

553
00:29:07.716 --> 00:29:10.996 A:middle
And so they look great across
a variety of backgrounds.

554
00:29:11.586 --> 00:29:13.826 A:middle
And because of this we don't
need multiple styles anymore.

555
00:29:13.826 --> 00:29:16.756 A:middle
And so we've deprecated the
segmented control style.

556
00:29:17.646 --> 00:29:21.586 A:middle
And so whether you're
looking at a white background

557
00:29:21.706 --> 00:29:25.596 A:middle
such as Calendar here with a red
tint color or black background

558
00:29:25.596 --> 00:29:28.636 A:middle
of an application like Stocks
with a blue tint color.

559
00:29:28.886 --> 00:29:30.306 A:middle
Segmented controls look great.

560
00:29:30.816 --> 00:29:33.686 A:middle
And we've done a very
similar thing for steppers.

561
00:29:33.686 --> 00:29:35.086 A:middle
They are also largely
transparent.

562
00:29:35.656 --> 00:29:37.876 A:middle
They also support tint colors
so they, too, will look great

563
00:29:37.876 --> 00:29:39.276 A:middle
over a wide variety
of backgrounds.

564
00:29:42.196 --> 00:29:43.716 A:middle
Now we haven't changed the API

565
00:29:43.716 --> 00:29:46.956 A:middle
for switches and--
switches and sliders.

566
00:29:48.156 --> 00:29:49.616 A:middle
But we have changed the metrics.

567
00:29:49.616 --> 00:29:50.646 A:middle
They're different size now.

568
00:29:51.296 --> 00:29:53.896 A:middle
And if you haven't yet
adapted Auto Layout

569
00:29:53.896 --> 00:29:57.766 A:middle
in your application this is
a fantastic way to account

570
00:29:57.766 --> 00:29:59.976 A:middle
for metrics changes like
this in the operating system.

571
00:30:03.516 --> 00:30:06.726 A:middle
PickerViews have a beautiful
new three-dimensional appearance

572
00:30:07.006 --> 00:30:07.826 A:middle
in iOS 7.

573
00:30:08.396 --> 00:30:11.866 A:middle
We haven't changed the
API for PickerViews,

574
00:30:11.866 --> 00:30:16.406 A:middle
but we are changing the way we
are encouraging you to use them.

575
00:30:16.616 --> 00:30:19.786 A:middle
Previously, PickerViews were
often presented as input views

576
00:30:19.786 --> 00:30:20.776 A:middle
on the bottom of the screen.

577
00:30:20.776 --> 00:30:24.096 A:middle
In fact, they often came in
as part of the navigation push

578
00:30:24.606 --> 00:30:26.756 A:middle
which brought in an
entirely new view controller

579
00:30:26.756 --> 00:30:28.776 A:middle
to allow the user to
interact with their content.

580
00:30:29.896 --> 00:30:31.026 A:middle
We're now encouraging you

581
00:30:31.026 --> 00:30:33.116 A:middle
to present these
PickerViews in line.

582
00:30:33.686 --> 00:30:34.926 A:middle
So we look at the Calendar here.

583
00:30:35.396 --> 00:30:38.866 A:middle
When the user edits the time,
you'll see that TableView opens

584
00:30:38.866 --> 00:30:41.086 A:middle
up revealing the
picker and it goes away

585
00:30:41.086 --> 00:30:41.986 A:middle
when they no longer need it.

586
00:30:42.596 --> 00:30:44.866 A:middle
This creates a more
lively engaging interface,

587
00:30:45.006 --> 00:30:46.036 A:middle
but it's also a lighter way

588
00:30:46.036 --> 00:30:48.476 A:middle
that doesn't involve this big
heavy weight context shift

589
00:30:48.476 --> 00:30:49.186 A:middle
for the user.

590
00:30:53.796 --> 00:30:56.266 A:middle
For applications that use
the SearchDisplayController,

591
00:30:56.826 --> 00:31:00.146 A:middle
we're not typically displaying
the search bar inside the

592
00:31:00.146 --> 00:31:01.046 A:middle
navigation bar.

593
00:31:01.626 --> 00:31:04.266 A:middle
And this is, again,
because we want

594
00:31:04.266 --> 00:31:06.176 A:middle
to put the focus on the content.

595
00:31:06.176 --> 00:31:07.676 A:middle
We want the chrome to
get out of the way.

596
00:31:07.676 --> 00:31:10.586 A:middle
And when you're searching,
you don't need to have excess

597
00:31:10.766 --> 00:31:11.736 A:middle
to the navigation bar.

598
00:31:12.286 --> 00:31:14.856 A:middle
It's just easy for
you to do yourself

599
00:31:14.856 --> 00:31:16.906 A:middle
with a simple additional
Boolean property

600
00:31:16.906 --> 00:31:19.186 A:middle
on SearchDisplayController
to indicate that you want

601
00:31:19.186 --> 00:31:22.036 A:middle
to put the search bar
inside the navigation bar.

602
00:31:22.586 --> 00:31:26.616 A:middle
And finally, I want
to talk a moment

603
00:31:26.616 --> 00:31:28.076 A:middle
about Adaptive Multitasking.

604
00:31:28.656 --> 00:31:33.776 A:middle
It's very important
to users in iOS 7--

605
00:31:34.506 --> 00:31:36.786 A:middle
their applications feel
like they're always running

606
00:31:37.106 --> 00:31:38.926 A:middle
and always up-to-date.

607
00:31:39.716 --> 00:31:41.656 A:middle
So we have several
new mechanisms

608
00:31:42.626 --> 00:31:45.066 A:middle
to allow your application
to get launched and updated

609
00:31:45.066 --> 00:31:47.326 A:middle
in the background
and updated snapshot.

610
00:31:48.316 --> 00:31:51.276 A:middle
So when the user goes into
the multitasking switcher,

611
00:31:51.836 --> 00:31:55.196 A:middle
when they launch your app,
they see up-to-date content,

612
00:31:55.646 --> 00:31:57.806 A:middle
giving the impression that your
application has been running all

613
00:31:57.806 --> 00:32:00.026 A:middle
along and is always up-to-date.

614
00:32:02.016 --> 00:32:04.316 A:middle
We have a session
about this afternoon,

615
00:32:04.316 --> 00:32:05.596 A:middle
at 2 o'clock in this room.

616
00:32:05.856 --> 00:32:07.586 A:middle
And I encourage you
all to come to this,

617
00:32:07.886 --> 00:32:09.976 A:middle
so that you can make your
application still exactly the

618
00:32:09.976 --> 00:32:11.056 A:middle
same way to your users.

619
00:32:12.076 --> 00:32:14.416 A:middle
With that, I'd like to turn it
back over to Andy to take us

620
00:32:14.416 --> 00:32:22.946 A:middle
through the remaining
changes in UIKit for iOS 7.

621
00:32:22.946 --> 00:32:23.066 A:middle
[ Applause ]

622
00:32:23.066 --> 00:32:23.696 A:middle
&gt;&gt; Thanks Jason.

623
00:32:24.836 --> 00:32:28.156 A:middle
Now, we've talked
a lot about clarity

624
00:32:28.326 --> 00:32:30.376 A:middle
and deference so
far in this talk.

625
00:32:31.506 --> 00:32:33.766 A:middle
And I'd like to steer
the direction

626
00:32:33.766 --> 00:32:36.326 A:middle
of our discussion
now towards depth.

627
00:32:37.636 --> 00:32:41.816 A:middle
If we look at iOS
7's Lock screen,

628
00:32:42.926 --> 00:32:44.916 A:middle
we see it's been
totally redesigned and

629
00:32:44.916 --> 00:32:45.976 A:middle
yet it's very familiar.

630
00:32:46.736 --> 00:32:50.466 A:middle
And one of the aspects of
that familiarity is the Camera

631
00:32:50.466 --> 00:32:51.716 A:middle
button, down in the lower right.

632
00:32:52.876 --> 00:32:55.306 A:middle
So as I'm upgrading from iOS
6 to iOS 7, I still know--

633
00:32:55.666 --> 00:32:57.746 A:middle
if I drag my finger up along
the right side of the screen,

634
00:32:59.036 --> 00:32:59.826 A:middle
I can get to the camera.

635
00:33:00.936 --> 00:33:03.636 A:middle
But look at the way it responds,
it bounces differently,

636
00:33:03.666 --> 00:33:05.506 A:middle
from different heights,
I can even throw it down,

637
00:33:06.666 --> 00:33:08.166 A:middle
and it creates this
wonderful bounce effect.

638
00:33:08.226 --> 00:33:11.686 A:middle
It feels like the user
interface is responding to me,

639
00:33:11.686 --> 00:33:15.536 A:middle
it feels like a much
more rich interaction.

640
00:33:16.916 --> 00:33:18.936 A:middle
And, of course, we could
have done this before.

641
00:33:19.506 --> 00:33:23.236 A:middle
But with iOS 7, we're
introducing a piece

642
00:33:23.236 --> 00:33:28.726 A:middle
of technology that made it easy
to do this, has made it easy

643
00:33:28.726 --> 00:33:31.286 A:middle
to do this kind of thing
throughout the operating system

644
00:33:31.426 --> 00:33:34.186 A:middle
and will make it incredibly
easy for you all to do this kind

645
00:33:34.186 --> 00:33:35.696 A:middle
of thing in your applications.

646
00:33:37.006 --> 00:33:38.046 A:middle
That's UIKit dynamics.

647
00:33:38.896 --> 00:33:43.826 A:middle
The idea behind UIKit
dynamics is

648
00:33:43.826 --> 00:33:47.356 A:middle
that you'll specify high
level, physics like behaviors

649
00:33:47.546 --> 00:33:49.976 A:middle
for your application, so
that you can really quickly

650
00:33:50.226 --> 00:33:52.706 A:middle
with just a few lines
of code get these kinds

651
00:33:52.706 --> 00:33:55.496 A:middle
of rich interactions that
I've just been showing you.

652
00:33:56.206 --> 00:33:57.876 A:middle
So for instance, for
this Lock screen here,

653
00:33:58.336 --> 00:33:59.826 A:middle
all we have to do is specify

654
00:34:00.336 --> 00:34:02.956 A:middle
that the Lock screen has a
certain amount of gravity,

655
00:34:03.676 --> 00:34:06.966 A:middle
a certain amount of bounciness,
that it should collide

656
00:34:06.966 --> 00:34:09.326 A:middle
with the edges of the
screen-- just a few lines--

657
00:34:09.746 --> 00:34:11.666 A:middle
and we got this lovely effect.

658
00:34:13.255 --> 00:34:15.826 A:middle
We're using in multiple places
throughout the operating system:

659
00:34:16.626 --> 00:34:17.775 A:middle
Messages for instance.

660
00:34:19.246 --> 00:34:22.846 A:middle
We create kind of a playful
feel for the chat bubbles.

661
00:34:25.505 --> 00:34:27.956 A:middle
You see that they lag a
moment behind scrolling.

662
00:34:29.466 --> 00:34:32.326 A:middle
We're able to do that
using attachment behaviors

663
00:34:32.626 --> 00:34:34.196 A:middle
in UIKit dynamics
which allow you

664
00:34:34.196 --> 00:34:37.396 A:middle
to specify spring-like
behaviors for elements

665
00:34:37.396 --> 00:34:38.235 A:middle
in your user interface.

666
00:34:39.045 --> 00:34:41.976 A:middle
Now, we have a number of talks

667
00:34:42.116 --> 00:34:43.295 A:middle
on this topic throughout
the week.

668
00:34:43.876 --> 00:34:45.376 A:middle
And so I don't need to
go into the details.

669
00:34:46.025 --> 00:34:47.886 A:middle
Two full talks on
UIKit dynamics,

670
00:34:48.416 --> 00:34:51.626 A:middle
and we'll also discuss a
new spring animation API

671
00:34:51.626 --> 00:34:54.166 A:middle
that we've added to UIView
and we're very excited about.

672
00:34:55.306 --> 00:34:58.526 A:middle
I'd like to also direct your
attention towards the ScrollView

673
00:34:58.576 --> 00:35:01.046 A:middle
talk which is always
amazing year after year.

674
00:35:01.666 --> 00:35:05.226 A:middle
But this year in particular,
it's going to have a demo

675
00:35:05.226 --> 00:35:08.886 A:middle
that specifically goes into
that Messages bouncy effect

676
00:35:09.156 --> 00:35:11.396 A:middle
that you all just
reacted so positively to.

677
00:35:11.956 --> 00:35:13.986 A:middle
And I know a lot of you are
really curious how we did that.

678
00:35:14.476 --> 00:35:15.466 A:middle
So check out that talk.

679
00:35:15.956 --> 00:35:18.196 A:middle
It will give you all the
details, live code demos.

680
00:35:18.476 --> 00:35:21.606 A:middle
It's going to be great.

681
00:35:21.606 --> 00:35:26.876 A:middle
Now we've looked at the Lock
screen, this is the Home screen.

682
00:35:27.446 --> 00:35:30.126 A:middle
But the Home screen
doesn't stay like this.

683
00:35:30.936 --> 00:35:35.276 A:middle
As soon as you pick the phone
up and you start interacting

684
00:35:35.276 --> 00:35:37.326 A:middle
with it in your hand
making small movements,

685
00:35:38.566 --> 00:35:40.016 A:middle
the UI in the Home
screen changes,

686
00:35:40.666 --> 00:35:43.286 A:middle
starts to communicate depth.

687
00:35:43.286 --> 00:35:47.626 A:middle
Let's look at the stars at
the edges of the screen.

688
00:35:49.186 --> 00:35:50.806 A:middle
They move in and out
in a way that suggests

689
00:35:51.096 --> 00:35:53.906 A:middle
that background is
recessed beneath the screen.

690
00:35:54.856 --> 00:35:57.816 A:middle
And if we look at that
red "1" badge on top

691
00:35:57.816 --> 00:36:00.816 A:middle
of the Messages icon, it's
moving in a way that suggests

692
00:36:00.816 --> 00:36:01.976 A:middle
that it's really floating there.

693
00:36:01.976 --> 00:36:06.756 A:middle
Now you've seen this slide
because Toby stole my slides.

694
00:36:07.456 --> 00:36:09.746 A:middle
But there are more places

695
00:36:09.746 --> 00:36:10.866 A:middle
where we're using this
throughout the system.

696
00:36:12.176 --> 00:36:12.796 A:middle
Here's Safari.

697
00:36:13.076 --> 00:36:15.646 A:middle
Look at how when we tilt back,
we can see more of each tab,

698
00:36:16.556 --> 00:36:17.666 A:middle
and here it's hiding
a little bit.

699
00:36:18.866 --> 00:36:21.546 A:middle
And actually, the wallpaper
is even behind those tabs

700
00:36:21.956 --> 00:36:24.936 A:middle
and it's moving consistently
with the last slide as well

701
00:36:25.366 --> 00:36:28.966 A:middle
to create this very
rich sense of depth.

702
00:36:29.156 --> 00:36:30.926 A:middle
And here, we're actually
using it

703
00:36:30.926 --> 00:36:32.996 A:middle
in standard system UI elements.

704
00:36:33.286 --> 00:36:40.216 A:middle
Look at the way that
alert floats.

705
00:36:40.216 --> 00:36:40.283 A:middle
[ Applause ]

706
00:36:40.283 --> 00:36:41.766 A:middle
So even without you doing
anything, you're going

707
00:36:41.766 --> 00:36:43.996 A:middle
to get this kind of effect
in your application, alerts,

708
00:36:44.756 --> 00:36:48.086 A:middle
action sheets, activity
view controller, popovers.

709
00:36:49.446 --> 00:36:51.556 A:middle
And I just want to
show you a quick A/B

710
00:36:51.766 --> 00:36:53.366 A:middle
of what the screen looks
like with and without.

711
00:36:54.686 --> 00:36:55.916 A:middle
I don't have to tell
you which is which.

712
00:36:56.636 --> 00:37:01.476 A:middle
I could watch this
all day [laughter].

713
00:37:03.596 --> 00:37:05.886 A:middle
The best news I have is not
just that we've done this thing,

714
00:37:06.746 --> 00:37:09.486 A:middle
Bbt similarly to the
UIKit dynamics case,

715
00:37:10.286 --> 00:37:13.046 A:middle
because we think this feeling
of depth is so important

716
00:37:13.526 --> 00:37:16.696 A:middle
in communicating richness
in your interface and also

717
00:37:16.696 --> 00:37:20.036 A:middle
in explaining how information
is organized in your interface,

718
00:37:20.936 --> 00:37:22.726 A:middle
we want to make it really easy.

719
00:37:23.316 --> 00:37:26.686 A:middle
So we've made an API for it:
it's called motion effects.

720
00:37:28.046 --> 00:37:30.806 A:middle
It's going to be really easy
for you all to adopt this kind

721
00:37:30.806 --> 00:37:34.456 A:middle
of behavior in your
application as well.

722
00:37:34.666 --> 00:37:37.136 A:middle
Now motion effects
works by using all

723
00:37:37.136 --> 00:37:41.776 A:middle
of the advanced sensors on our
devices in order to estimate

724
00:37:41.776 --> 00:37:46.796 A:middle
in any given moment where
the device is facing relative

725
00:37:46.836 --> 00:37:47.306 A:middle
to the user.

726
00:37:47.306 --> 00:37:52.576 A:middle
And it can handle things like
subtle shifts in position,

727
00:37:52.576 --> 00:37:55.206 A:middle
if I'm lying in bed and
I roll over to my side,

728
00:37:55.856 --> 00:37:58.446 A:middle
or even dramatic shifts,
like, I turn my phone around

729
00:37:58.446 --> 00:38:01.966 A:middle
and hand it to my friend.

730
00:38:01.966 --> 00:38:04.426 A:middle
And once you know
the disposition

731
00:38:04.426 --> 00:38:05.536 A:middle
of the phone's arrangement,

732
00:38:06.226 --> 00:38:09.616 A:middle
you can easily specify how your
user interface should react

733
00:38:10.066 --> 00:38:11.196 A:middle
in response to that motion.

734
00:38:11.696 --> 00:38:15.816 A:middle
Well, this effect isn't
free and you wouldn't want

735
00:38:15.816 --> 00:38:17.526 A:middle
to put it everywhere
in your application due

736
00:38:17.526 --> 00:38:20.346 A:middle
to the battery implications,
but we've done a great deal

737
00:38:20.346 --> 00:38:23.906 A:middle
of work all the way up and
down the stack to make sure

738
00:38:23.906 --> 00:38:25.916 A:middle
that the impact of
this is as low

739
00:38:25.916 --> 00:38:28.076 A:middle
as we could possibly pull off.

740
00:38:28.426 --> 00:38:30.066 A:middle
So if you're going to
implement this kind of effect

741
00:38:30.066 --> 00:38:32.366 A:middle
in your application, we
encourage you to use this API.

742
00:38:32.366 --> 00:38:36.776 A:middle
I want to show you in
particular what's going

743
00:38:36.776 --> 00:38:39.936 A:middle
on on-screen while this
motion is happening.

744
00:38:40.046 --> 00:38:44.886 A:middle
So on the screen to the right
you'll see what's on the display

745
00:38:44.886 --> 00:38:46.226 A:middle
of the device in the left.

746
00:38:46.226 --> 00:38:50.836 A:middle
So as it starts moving,
we adjust the position

747
00:38:50.836 --> 00:38:53.916 A:middle
of the alert along with
the rotation of the device.

748
00:38:55.146 --> 00:38:58.186 A:middle
We're adjusting the lighting
of the shadows between the tabs

749
00:38:59.306 --> 00:39:00.856 A:middle
in order to create a
nice shading effect.

750
00:39:00.856 --> 00:39:04.736 A:middle
And then we're doing this
perspective skew distortion

751
00:39:04.736 --> 00:39:05.626 A:middle
on the tab as well.

752
00:39:06.906 --> 00:39:08.996 A:middle
So you can specify
any kinds of effects

753
00:39:08.996 --> 00:39:10.296 A:middle
for your application
using this API.

754
00:39:10.436 --> 00:39:11.996 A:middle
It's not just positioning.

755
00:39:12.466 --> 00:39:14.426 A:middle
So later this week, we have--

756
00:39:15.836 --> 00:39:18.356 A:middle
going to have a talk that I
think you'll all very excited

757
00:39:18.356 --> 00:39:21.706 A:middle
to attend called "Implementing,
Engaging UI on iOS",

758
00:39:21.866 --> 00:39:25.536 A:middle
where there are going to be live
code demos and examples of how

759
00:39:25.536 --> 00:39:28.556 A:middle
to get this kind of beautiful
effect in your applications.

760
00:39:32.716 --> 00:39:37.686 A:middle
There's one more big way that
we're using depth on iOS,

761
00:39:39.256 --> 00:39:41.956 A:middle
and that's with these
blurring layers.

762
00:39:42.836 --> 00:39:45.156 A:middle
So you'll see here,
we have these albums.

763
00:39:45.676 --> 00:39:47.716 A:middle
We're even starting to
suggest depth by the way

764
00:39:47.716 --> 00:39:48.836 A:middle
that they're stacking up here.

765
00:39:49.426 --> 00:39:52.266 A:middle
But I want to draw your
attention specifically

766
00:39:52.266 --> 00:39:54.336 A:middle
to what happens when I
pressed this Edit button.

767
00:39:55.076 --> 00:39:57.206 A:middle
You see that green
album through this sheet

768
00:39:57.206 --> 00:40:01.536 A:middle
and that helps communicate
without really getting

769
00:40:01.536 --> 00:40:04.156 A:middle
in the way or taking
up space on screen

770
00:40:04.776 --> 00:40:07.186 A:middle
that that content is
still underneath this

771
00:40:07.186 --> 00:40:08.066 A:middle
modal ViewController.

772
00:40:09.146 --> 00:40:11.826 A:middle
If I were to dismiss it, I know
it's still going to be there

773
00:40:11.826 --> 00:40:14.256 A:middle
because I can see it right now.

774
00:40:14.486 --> 00:40:16.216 A:middle
Similarly, you'll see
a Notification Center

775
00:40:17.666 --> 00:40:19.986 A:middle
that your content is
visible behind it.

776
00:40:21.106 --> 00:40:23.746 A:middle
And as I mentioned earlier
with the navigation bars,

777
00:40:23.916 --> 00:40:26.406 A:middle
we're doing a bunch of
processing to make sure

778
00:40:26.406 --> 00:40:30.376 A:middle
that while we communicate
depth in this way, we don't get

779
00:40:30.376 --> 00:40:33.266 A:middle
in the way of the
concept which is on top

780
00:40:33.266 --> 00:40:34.386 A:middle
of the Notification Center.

781
00:40:34.736 --> 00:40:36.696 A:middle
So you can see that
that text is still crisp

782
00:40:37.126 --> 00:40:39.956 A:middle
and readable even while
we see the icons through.

783
00:40:40.496 --> 00:40:44.296 A:middle
We have different styles for
each of these blurring effects

784
00:40:44.616 --> 00:40:47.036 A:middle
that we're using to
communicate different materials.

785
00:40:47.556 --> 00:40:49.546 A:middle
And so you'll see for
Control Center for instance,

786
00:40:50.436 --> 00:40:51.366 A:middle
it's a much lighter style.

787
00:40:51.366 --> 00:40:53.676 A:middle
It feels almost as
if someone has turned

788
00:40:53.676 --> 00:40:58.886 A:middle
on an extra backlight
underneath the screen.

789
00:40:59.106 --> 00:41:03.806 A:middle
So, in order to make this kind
of advance image processing fast

790
00:41:04.526 --> 00:41:07.016 A:middle
and easy for you and
your applications,

791
00:41:07.386 --> 00:41:08.626 A:middle
one of the things
we're introducing

792
00:41:08.626 --> 00:41:12.696 A:middle
with iOS 7 is radically
faster snapshotting APIs.

793
00:41:13.196 --> 00:41:19.436 A:middle
[ Applause ]

794
00:41:19.936 --> 00:41:21.346 A:middle
And this method is
coming in Seed II.

795
00:41:22.176 --> 00:41:23.996 A:middle
There's a method in Seed I
that you can use for a number

796
00:41:23.996 --> 00:41:25.986 A:middle
of application, although,
not this blurring effect,

797
00:41:26.076 --> 00:41:28.046 A:middle
that will be discussed
later on this week.

798
00:41:28.366 --> 00:41:31.906 A:middle
But this method will allow you
to get an image representation

799
00:41:32.376 --> 00:41:33.826 A:middle
of a hierarchy in
your application.

800
00:41:34.376 --> 00:41:35.316 A:middle
And you could have
done this before.

801
00:41:35.656 --> 00:41:38.356 A:middle
But this particular piece
of API is turbo charged.

802
00:41:38.356 --> 00:41:40.446 A:middle
It's about an order
of magnitude faster.

803
00:41:41.666 --> 00:41:44.206 A:middle
So it'll make possible a
number of really wonderful

804
00:41:44.206 --> 00:41:47.316 A:middle
and advanced image processing
effects in your applications.

805
00:41:48.006 --> 00:41:52.076 A:middle
That same talk which is going
to go over motion effects

806
00:41:52.076 --> 00:41:54.966 A:middle
and show you more of what
you can do with them is going

807
00:41:54.966 --> 00:41:56.066 A:middle
to give you more information

808
00:41:56.356 --> 00:41:58.486 A:middle
on implementing these
blurring layers

809
00:41:58.606 --> 00:42:00.586 A:middle
for communicating depth
in your applications.

810
00:42:01.526 --> 00:42:07.106 A:middle
So I think this one is
going to be a must-see.

811
00:42:07.406 --> 00:42:09.656 A:middle
So we've toured around
the system.

812
00:42:10.696 --> 00:42:12.716 A:middle
We've talked about
everything we've changed.

813
00:42:13.656 --> 00:42:16.686 A:middle
But I'm sure that one
of the chief questions

814
00:42:16.686 --> 00:42:21.676 A:middle
on your minds is, okay,
what do I have to change?

815
00:42:21.846 --> 00:42:23.636 A:middle
And so I'd like to
close out this session

816
00:42:24.006 --> 00:42:27.506 A:middle
by discussing strategies
and tips

817
00:42:27.636 --> 00:42:30.326 A:middle
for adapting your
application to iOS 7.

818
00:42:30.326 --> 00:42:34.746 A:middle
And I thought that a nice way to
do that might be to discuss some

819
00:42:34.746 --> 00:42:36.386 A:middle
of those strategies we used

820
00:42:36.666 --> 00:42:39.706 A:middle
with our own applications
moving them to iOS 7.

821
00:42:39.816 --> 00:42:47.326 A:middle
So as we've been saying, the
change to the user interface

822
00:42:47.326 --> 00:42:50.536 A:middle
in the iOS 7 is not
just an aesthetic one.

823
00:42:51.936 --> 00:42:53.266 A:middle
It's a highly functional one.

824
00:42:53.856 --> 00:42:56.526 A:middle
And so for each application,

825
00:42:56.636 --> 00:42:59.736 A:middle
the first thing we did
was we broke it down.

826
00:43:00.686 --> 00:43:04.696 A:middle
We asked ourselves, "What is the
primary information the user is

827
00:43:04.696 --> 00:43:06.196 A:middle
trying to access in
this application?

828
00:43:06.656 --> 00:43:10.076 A:middle
What are the primary actions
the user is trying to perform?

829
00:43:11.486 --> 00:43:13.496 A:middle
What's secondary,
what's tertiary?"

830
00:43:14.406 --> 00:43:16.836 A:middle
Once we have those lists,
we were able to build

831
00:43:16.836 --> 00:43:20.106 A:middle
that application back
up in order to make sure

832
00:43:20.106 --> 00:43:23.676 A:middle
that what was primary, the
content, the chief task,

833
00:43:24.466 --> 00:43:28.716 A:middle
were easy to access, were
beautiful, were available.

834
00:43:29.326 --> 00:43:32.206 A:middle
That secondary tasks
are just a moment away,

835
00:43:32.276 --> 00:43:35.266 A:middle
or where they are hard to get
to in previous versions of iOS,

836
00:43:35.836 --> 00:43:38.836 A:middle
we would create interactions
or change the architecture

837
00:43:38.836 --> 00:43:40.486 A:middle
around to make them
easier to access.

838
00:43:41.906 --> 00:43:44.606 A:middle
And unnecessary elements
of our application,

839
00:43:45.396 --> 00:43:47.406 A:middle
we realized in the study
that we could strip away.

840
00:43:47.966 --> 00:43:50.426 A:middle
But we didn't just strip away.

841
00:43:51.766 --> 00:43:54.546 A:middle
In so many cases, we made
these interactions much richer,

842
00:43:54.546 --> 00:43:59.226 A:middle
and we did that using the
new physics-like system

843
00:43:59.316 --> 00:44:01.386 A:middle
that I've been describing
to you, UIKit dynamics.

844
00:44:02.286 --> 00:44:03.716 A:middle
We did it with the
motion effects.

845
00:44:04.216 --> 00:44:05.666 A:middle
We did it with these
blurring layers.

846
00:44:05.936 --> 00:44:08.036 A:middle
We did it with use of
color and typography.

847
00:44:08.576 --> 00:44:16.916 A:middle
And where it made sense,
we took special advantage

848
00:44:17.526 --> 00:44:20.516 A:middle
of those beautiful and
dense retina displays

849
00:44:21.026 --> 00:44:22.106 A:middle
that we have in our devices.

850
00:44:23.716 --> 00:44:26.516 A:middle
No longer is all of our
art, simply a scaled up

851
00:44:26.516 --> 00:44:29.706 A:middle
and more detailed
version of the 1X work.

852
00:44:30.786 --> 00:44:33.076 A:middle
You see that right off
with the typography,

853
00:44:33.636 --> 00:44:36.076 A:middle
which is taking full advantage
of the retina display in order

854
00:44:36.076 --> 00:44:39.536 A:middle
to create these extremely crisp,
beautiful, but readable lines.

855
00:44:40.366 --> 00:44:44.906 A:middle
But also in many places where
we wanted to avoid competing

856
00:44:45.176 --> 00:44:49.276 A:middle
with the application's content,
we would lower the visual weight

857
00:44:49.646 --> 00:44:53.536 A:middle
of the system's chrome
by using 1 pixel elements

858
00:44:53.846 --> 00:44:55.496 A:middle
on retina displays,
1 pixel hairlines.

859
00:44:56.536 --> 00:44:59.036 A:middle
And so you'll see those kinds
of touches throughout iOS 7.

860
00:44:59.586 --> 00:45:05.126 A:middle
That is all very
abstract and we've gone

861
00:45:05.126 --> 00:45:06.366 A:middle
over a lot of API today.

862
00:45:07.016 --> 00:45:11.246 A:middle
So I would like now to
turn our attention to some

863
00:45:11.246 --> 00:45:13.456 A:middle
of the most important
things that we've called

864
00:45:13.456 --> 00:45:15.166 A:middle
out from this session
that I encourage you

865
00:45:15.166 --> 00:45:16.856 A:middle
to adapt first in
your application.

866
00:45:17.436 --> 00:45:22.136 A:middle
We've been harping on this
idea that content comes first.

867
00:45:23.236 --> 00:45:24.566 A:middle
And so often content is text.

868
00:45:25.516 --> 00:45:26.876 A:middle
That's why we spent
so much time on it.

869
00:45:27.976 --> 00:45:30.206 A:middle
And so I would encourage
you, first thing,

870
00:45:30.296 --> 00:45:32.826 A:middle
to adopt these new text APIs.

871
00:45:33.556 --> 00:45:36.676 A:middle
They'll make sure that the text
in your application is beautiful

872
00:45:36.676 --> 00:45:40.296 A:middle
at all sizes, it will make
sure that it looks and fits

873
00:45:40.296 --> 00:45:42.246 A:middle
in with the rest of
the operating systems,

874
00:45:42.246 --> 00:45:43.826 A:middle
is part of that cohesive
design theme.

875
00:45:44.846 --> 00:45:47.836 A:middle
We'll make sure that users with
accessibility means will be able

876
00:45:47.936 --> 00:45:50.516 A:middle
to use your application
and get access

877
00:45:50.516 --> 00:45:51.506 A:middle
to all that great content.

878
00:45:52.876 --> 00:45:54.366 A:middle
We'll make your application
look better than ever.

879
00:45:54.816 --> 00:45:56.326 A:middle
It's absolutely fantastic.

880
00:45:57.656 --> 00:45:59.626 A:middle
Secondly, again, with
the theme of content,

881
00:45:59.916 --> 00:46:01.216 A:middle
your controllers are
going full screen,

882
00:46:01.926 --> 00:46:04.056 A:middle
that's the default behavior,
you don't have to turn that on.

883
00:46:04.526 --> 00:46:06.606 A:middle
And so if you have
custom layout methods

884
00:46:06.826 --> 00:46:09.836 A:middle
on your ViewController's views,
you may need to adapt them

885
00:46:10.326 --> 00:46:13.796 A:middle
to this new reality, or may
need to take advantage of some

886
00:46:13.796 --> 00:46:15.256 A:middle
of the APIs that
I've been discussing

887
00:46:15.256 --> 00:46:16.226 A:middle
in order to make that happen.

888
00:46:16.226 --> 00:46:20.946 A:middle
But once you do, I think, you'll
see that giving content all

889
00:46:20.946 --> 00:46:23.746 A:middle
that more room to breathe
is a really wonderful thing.

890
00:46:23.746 --> 00:46:26.526 A:middle
It helps suggest place
in your application

891
00:46:27.276 --> 00:46:30.786 A:middle
and it gives a much richer
sense of motion as you scroll.

892
00:46:30.786 --> 00:46:34.386 A:middle
You'll see that content moving
up underneath the navigation bar

893
00:46:34.386 --> 00:46:37.306 A:middle
and the toolbar, it's
going to be great.

894
00:46:38.676 --> 00:46:40.576 A:middle
The Adaptive Multitasking,
we only touched

895
00:46:40.576 --> 00:46:42.906 A:middle
on today in this talk.

896
00:46:42.906 --> 00:46:45.586 A:middle
And we're going to go into a lot
more detail just later today.

897
00:46:45.966 --> 00:46:46.326 A:middle
Oh, goodness.

898
00:46:47.756 --> 00:46:50.506 A:middle
A lot more detail
just later today.

899
00:46:51.236 --> 00:46:56.286 A:middle
But I want to describe just
again how important the Adaptive

900
00:46:56.286 --> 00:46:59.406 A:middle
Multitasking API is not just to
the functionality of the system

901
00:46:59.406 --> 00:47:00.756 A:middle
or the convenience
that, for instance,

902
00:47:01.146 --> 00:47:03.216 A:middle
your users will have their
content all the time.

903
00:47:03.216 --> 00:47:03.746 A:middle
That's true.

904
00:47:03.796 --> 00:47:04.936 A:middle
And that will be really great

905
00:47:05.376 --> 00:47:07.016 A:middle
because functionality
is extremely important.

906
00:47:07.896 --> 00:47:10.756 A:middle
But the other thing this
Adaptive Multitasking system

907
00:47:10.756 --> 00:47:13.446 A:middle
does is when we wake
your application

908
00:47:13.446 --> 00:47:17.146 A:middle
up to fetch any data,
once you're done,

909
00:47:17.426 --> 00:47:18.226 A:middle
we take a screen shot.

910
00:47:18.976 --> 00:47:21.576 A:middle
And then we use that screen
shot in the app switcher,

911
00:47:21.576 --> 00:47:24.236 A:middle
and also when you're
launching applications.

912
00:47:25.196 --> 00:47:27.686 A:middle
And so if we have a recent
screen shot, it's up to date

913
00:47:27.686 --> 00:47:31.216 A:middle
because you've adopted this
API, it really feels to the user

914
00:47:31.496 --> 00:47:33.266 A:middle
like your App is
running all the time.

915
00:47:34.376 --> 00:47:36.696 A:middle
And it's the best of both
worlds, because it feels

916
00:47:36.696 --> 00:47:39.016 A:middle
that way, it's a
really persuasive trick,

917
00:47:39.876 --> 00:47:43.226 A:middle
even while you're not paying
the enormous performance

918
00:47:43.226 --> 00:47:45.496 A:middle
ramifications that
would be necessary

919
00:47:45.496 --> 00:47:46.626 A:middle
to actually make that true.

920
00:47:46.626 --> 00:47:50.426 A:middle
It makes the whole
experience fluid and fast;

921
00:47:50.976 --> 00:47:55.226 A:middle
it's great; adopt this API.

922
00:47:55.556 --> 00:47:58.396 A:middle
So we have a lot less
ornamentation in iOS 7,

923
00:47:58.396 --> 00:48:00.286 A:middle
and we're really
pleased about that

924
00:48:00.366 --> 00:48:03.926 A:middle
because it gives the
content room to shine.

925
00:48:04.116 --> 00:48:07.126 A:middle
And in exchange for that
change in ornamentation,

926
00:48:07.386 --> 00:48:08.876 A:middle
you're not conveying
the personality

927
00:48:08.876 --> 00:48:12.856 A:middle
of your application using
this heavy, dense imagery.

928
00:48:13.336 --> 00:48:14.566 A:middle
You're not conveying
the structure

929
00:48:14.566 --> 00:48:15.976 A:middle
of your application
using that either.

930
00:48:16.916 --> 00:48:18.286 A:middle
We'd like to encourage you to--

931
00:48:18.286 --> 00:48:21.346 A:middle
now use these advanced
animated transitions

932
00:48:21.686 --> 00:48:23.556 A:middle
between the various labs
of your application.

933
00:48:24.636 --> 00:48:29.266 A:middle
In order to create these new
kinds of rich feelings to moving

934
00:48:29.266 --> 00:48:32.066 A:middle
through screens and
also in order

935
00:48:32.066 --> 00:48:35.516 A:middle
to help give the user
some more detailed context

936
00:48:35.596 --> 00:48:37.816 A:middle
for what's happening as
they're zooming into a month

937
00:48:38.056 --> 00:48:39.176 A:middle
in the Calendar for instance.

938
00:48:40.016 --> 00:48:42.536 A:middle
They can create a mental model
with that much more easily

939
00:48:42.796 --> 00:48:45.136 A:middle
than simple navigation
controller transitions.

940
00:48:45.686 --> 00:48:46.916 A:middle
We've given you a
lot of power here

941
00:48:46.986 --> 00:48:49.866 A:middle
and I encourage you to use it.

942
00:48:50.196 --> 00:48:53.396 A:middle
Finally, where it's appropriate,
we think these new dynamics

943
00:48:53.396 --> 00:48:55.476 A:middle
and motions effects
APIs are going

944
00:48:55.476 --> 00:48:58.776 A:middle
to create some really
amazing designs.

945
00:48:59.826 --> 00:49:01.966 A:middle
Obviously, it's important to
be tasteful with these effects

946
00:49:02.036 --> 00:49:02.816 A:middle
because they're dramatic.

947
00:49:04.156 --> 00:49:06.156 A:middle
But when they're executed well,

948
00:49:06.776 --> 00:49:08.736 A:middle
they make the phone
feel so lively.

949
00:49:09.586 --> 00:49:12.046 A:middle
When you pick the phone up
off the desk, it's responding

950
00:49:12.046 --> 00:49:13.256 A:middle
to you before you've
even touch it.

951
00:49:14.716 --> 00:49:17.886 A:middle
And with the physics-like
effects in the dynamic system,

952
00:49:18.176 --> 00:49:22.466 A:middle
the interactions, feel so
much deeper and more rich.

953
00:49:23.936 --> 00:49:24.506 A:middle
It's really lovely.

954
00:49:24.506 --> 00:49:31.046 A:middle
Now I'd like to spend
a moment on the issue

955
00:49:31.046 --> 00:49:34.316 A:middle
of supporting both
iOS 6 and iOS 7.

956
00:49:35.686 --> 00:49:37.286 A:middle
Why are you laughing?

957
00:49:39.406 --> 00:49:41.036 A:middle
[laughter] And you
saw-- you saw yesterday,

958
00:49:41.096 --> 00:49:44.196 A:middle
you saw our upgrade numbers
they are really exciting.

959
00:49:45.456 --> 00:49:46.886 A:middle
People are moving
to new versions

960
00:49:46.886 --> 00:49:49.716 A:middle
of iOS at a ridiculous pace.

961
00:49:50.656 --> 00:49:53.956 A:middle
And iOS 7 is so exciting that
we're confident people are going

962
00:49:53.956 --> 00:49:56.216 A:middle
to move to it at the same pace.

963
00:49:56.796 --> 00:50:01.056 A:middle
And so we would suggest that you
consider focusing your efforts

964
00:50:01.056 --> 00:50:02.336 A:middle
on iOS 7 first.

965
00:50:03.556 --> 00:50:06.106 A:middle
Now, I know that's not going
to be possible for all of you.

966
00:50:07.156 --> 00:50:10.166 A:middle
So if you need to support
both operating systems,

967
00:50:10.166 --> 00:50:11.906 A:middle
I have a few words of
advice for you here.

968
00:50:12.946 --> 00:50:17.496 A:middle
In particular first, the iOS
7 UI Transition Guide goes

969
00:50:17.496 --> 00:50:21.666 A:middle
into a fair amount of detail,
the nitty-gritty of doing this.

970
00:50:22.046 --> 00:50:23.246 A:middle
And it gives you
some code samples

971
00:50:23.386 --> 00:50:24.766 A:middle
that will make the
tasks somewhat easier.

972
00:50:26.046 --> 00:50:27.376 A:middle
It talks about some of
the pitfalls as well.

973
00:50:28.236 --> 00:50:29.496 A:middle
So I would encourage
you to check that out.

974
00:50:29.976 --> 00:50:30.516 A:middle
It's on our website.

975
00:50:30.516 --> 00:50:33.796 A:middle
I'm going to be giving
you a link in a moment.

976
00:50:33.936 --> 00:50:36.316 A:middle
Jason mentioned earlier that
Auto Layout will help you deal

977
00:50:36.316 --> 00:50:38.596 A:middle
with metrics, that's
absolutely true.

978
00:50:39.076 --> 00:50:41.856 A:middle
But it's really essential
in dealing

979
00:50:41.856 --> 00:50:44.916 A:middle
with supporting both
iOS 6 and iOS 7.

980
00:50:45.326 --> 00:50:47.076 A:middle
It will do so much of the
heavy lifting for you.

981
00:50:47.596 --> 00:50:50.226 A:middle
So if you've already adopted
Auto Layout, I think you'll find

982
00:50:50.226 --> 00:50:52.636 A:middle
that at least around
standard controls and bars,

983
00:50:52.816 --> 00:50:54.656 A:middle
a lot of the layout work
has taken cared for you.

984
00:50:54.656 --> 00:50:56.926 A:middle
And if you haven't already
adopted Auto Layout,

985
00:50:57.446 --> 00:51:01.186 A:middle
now might be a good
time to start.

986
00:51:01.386 --> 00:51:07.206 A:middle
Finally, as you're considering
design for your application,

987
00:51:08.696 --> 00:51:10.716 A:middle
perhaps reviewing the themes
we've been discussing today:

988
00:51:10.716 --> 00:51:15.106 A:middle
a lot of what's new in
iOS 7 is not aesthetic.

989
00:51:15.956 --> 00:51:16.576 A:middle
It's structural.

990
00:51:17.106 --> 00:51:24.106 A:middle
And so, as you consider the
design, I would encourage you

991
00:51:24.106 --> 00:51:28.156 A:middle
to consider a user interface
which is structurally

992
00:51:28.556 --> 00:51:33.106 A:middle
in the spirit of iOS 7, even
if it's not aesthetically

993
00:51:33.686 --> 00:51:35.446 A:middle
in the spirit of iOS 7 on iOS 6.

994
00:51:36.746 --> 00:51:39.676 A:middle
So start with the structure
and get the aesthetics right

995
00:51:39.676 --> 00:51:40.896 A:middle
on iOS 7, too, of course.

996
00:51:41.456 --> 00:51:45.586 A:middle
And then move the structure
backwards to iOS 6 rather

997
00:51:45.586 --> 00:51:47.866 A:middle
than taking an iOS
6 application,

998
00:51:48.666 --> 00:51:50.206 A:middle
keeping all of its
structure the same,

999
00:51:51.606 --> 00:51:54.696 A:middle
and moving the aesthetics
to iOS 7's style.

1000
00:51:55.886 --> 00:51:59.306 A:middle
I think that will yield a less
satisfying result for users.

1001
00:52:00.036 --> 00:52:05.316 A:middle
Now, if you have more questions
about this topic or any

1002
00:52:05.316 --> 00:52:06.766 A:middle
of the things that we've
been discussing today,

1003
00:52:07.436 --> 00:52:09.346 A:middle
I'd encourage you to email
Jake Behrens, the gentlemen

1004
00:52:09.346 --> 00:52:10.076 A:middle
on the right over here.

1005
00:52:10.616 --> 00:52:12.816 A:middle
His email address is right there
and he'll be happy to help you

1006
00:52:12.856 --> 00:52:13.546 A:middle
with anything you need.

1007
00:52:14.376 --> 00:52:15.976 A:middle
The Transition Guide
is available

1008
00:52:15.976 --> 00:52:16.906 A:middle
on our developer website.

1009
00:52:17.806 --> 00:52:19.026 A:middle
And, of course, we encourage you

1010
00:52:19.026 --> 00:52:20.056 A:middle
to help each other
on the forums.

1011
00:52:21.186 --> 00:52:22.906 A:middle
Now we've pointed you at
a lot of sessions today.

1012
00:52:23.596 --> 00:52:26.466 A:middle
These are a few of the ones
we think are most important.

1013
00:52:27.146 --> 00:52:30.066 A:middle
And right up next, Chris Parker
will be telling you about all

1014
00:52:30.066 --> 00:52:32.076 A:middle
of the wonderful things
we've added to our APIs

1015
00:52:32.076 --> 00:52:35.346 A:middle
that are not specifically of
how the new user interface.

1016
00:52:36.456 --> 00:52:38.516 A:middle
And so we're really
excited about that as well.

1017
00:52:39.016 --> 00:52:48.720 A:middle
[ Silence ]

